declare type NoteLetter = "A" | "B" | "C" | "D" | "E" | "F" | "G";
declare type NoteAccidental = " " | "#" | "b" | " #" | " b" | "b#" | "#b";
declare type Note = string | number;
declare type Midi = number;
declare type Octave = number;
declare type OrNull<T> = T | null;
declare type NoteName = "C" | "C#" | "Db" | "D" | "D#" | "Eb" | "E" | "F" | "F#" | "Gb" | "G" | "G#" | "Ab" | "A" | "A#" | "Bb" | "B";
declare type NoteProps = {
    name: NoteName;
    letter: NoteLetter;
    acc: NoteAccidental | string;
    oct: OrNull<Octave>;
    step: number;
    pc: NoteName;
    alt: number;
    chroma: number;
    midi: OrNull<Midi>;
    freq: OrNull<number>;
};
declare type NoNoteProps = {
    name: null;
    oct: null;
    step: null;
    pc: null;
    alt: null;
    chroma: null;
    midi: null;
    freq: null;
};
export declare const names: (accTypes: NoteAccidental) => NoteName[];
export declare function tokenize(str?: Note): ["" | "C" | "D" | "E" | "F" | "G" | "A" | "B", string, string, string] | null;
export declare const props: (str: string | number) => Readonly<NoNoteProps> | Readonly<NoteProps>;
export declare const name: (str: string | number) => "C" | "C#" | "Db" | "D" | "D#" | "Eb" | "E" | "F" | "F#" | "Gb" | "G" | "G#" | "Ab" | "A" | "A#" | "Bb" | "B" | null;
export declare const pc: (str: string | number) => "C" | "C#" | "Db" | "D" | "D#" | "Eb" | "E" | "F" | "F#" | "Gb" | "G" | "G#" | "Ab" | "A" | "A#" | "Bb" | "B" | null;
export declare const midi: (note: string | number) => number | null;
export declare const midiToFreq: (midi: string | number | null, tuning?: number) => number | null;
export declare const freq: (note: string | number) => number | null;
export declare const freqToMidi: (freq: number) => number;
export declare const chroma: (str: string | number) => number | null;
export declare const oct: (str: string | number) => number | null;
export declare const stepToLetter: (step: number) => string;
export declare const altToAcc: (alt: number) => string;
export declare const from: (fromProps?: NoteProps, baseNote?: string | number | null) => string | null;
export declare const build: (fromProps?: NoteProps, baseNote?: string | number | null) => string | null;
export declare function fromMidi(num: Midi, sharps?: boolean): string;
export declare const simplify: (note: string | number, sameAcc?: boolean) => string | null;
export declare const enharmonic: (note: string | number) => string | null;
export {};
